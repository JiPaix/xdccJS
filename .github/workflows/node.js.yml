name: build
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'NO-CI')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: 'Setting up environnement variables'
      run : |
        touch .env
        echo SERVER1=${{secrets.SERVER1}} >> .env
        echo SERVER2=${{secrets.SERVER2}} >> .env
        echo CHAN1=${{secrets.CHAN1}} >> .env
        echo CHAN2=${{secrets.CHAN2}} >> .env
        echo BOT1=${{secrets.BOT1}} >> .env
        echo FILE1=${{secrets.FILE1}} >> .env
        echo IGNORE1=${{secrets.IGNORE1}} >> .env
        echo IGNORE2=${{secrets.IGNORE2}} >> .env
        echo IGNORE3=${{secrets.IGNORE3}} >> .env
    - name: Running build
      run: npm install && npm run build
  coverage:
    if: "!contains(github.event.head_commit.message, 'NO-CI')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Running build
      run: npm install && npm run build
    - name: Starting tests
      run: npm run coverage
    - name: Uploading coverage
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
  publish:
    if: github.ref == 'refs/heads/master'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: MontyD/package-json-updated-action@1.0.1
      id: version-updated
      with:
        path: package.json
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/checkout@v2
      if: steps.version-updated.outputs.has-updated
    - uses: actions/setup-node@v1
      if: steps.version-updated.outputs.has-updated
      with:
        node-version: 14
        registry-url: 'https://registry.npmjs.org'
    - run: npm install
      if: steps.version-updated.outputs.has-updated
    - run: npm publish
      if: steps.version-updated.outputs.has-updated
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}